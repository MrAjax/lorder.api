image: node:12.14.0

pipelines:
  default:
    - step:
        name: Build, migrations and tests
        deployment: test
        caches:
          - node
          - buildfolder
        script:
          - rm -rf dist
          - npm ci
          - npm run build
          - npm run test:remote
        services:
          - postgres
          - redis
  branches:
    staging:
      - step:
          name: Staging build
          caches:
            - node
            - buildfolder
          script:
            - rm -rf dist
            - npm ci
            - npm run build
          services:
            - postgres
            - redis
      - step:
          name: Staging tests
          caches:
            - node
            - buildfolder
          script:
            - ls -l
            - npm run test:remote
          services:
            - postgres
            - redis
      - step:
          name: Staging DEPLOY
          deployment: staging
          caches:
            - buildfolder
          script:
            - cd heroku
            - rm -rf bin dist public .git mails package.json package-lock.json
            - cp -r ../bin ../dist ../public ../mails ../ormconfig.js ../package.json ../package-lock.json ./
            - sed "s/rm -rf dist && tsc/echo NO NEED BUILD PREFERATION/" -i package.json
            - git init
            - git config user.email "razvanlomov@gmail.com"
            - git config user.name "Razzwan-CI"
            - git add .
            - git commit -m 'dynamic version'
            - git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$STAGING_APP_NAME.git -f HEAD:master
    master:
      - step:
          name: Production build
          caches:
            - node
            - buildfolder
          script:
            - rm -rf dist
            - npm ci
            - npm run build
          services:
            - postgres
            - redis
      - step:
          name: Production tests
          caches:
            - node
            - buildfolder
          script:
            - npm run test:remote
          services:
            - postgres
            - redis
      - step:
          name: Production DEPLOY
          deployment: production
          caches:
            - buildfolder
          script:
            - cd heroku
            - rm -rf bin dist public .git mails package.json package-lock.json
            - cp -r ../bin ../dist ../public ../mails ../ormconfig.js ../package.json ../package-lock.json ./
            - sed "s/rm -rf dist && tsc/echo NO NEED BUILD PREFERATION/" -i package.json
            - git init
            - git config user.email "razvanlomov@gmail.com"
            - git config user.name "Razzwan-CI"
            - git add .
            - git commit -m 'dynamic version'
            - git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$PRODUCTION_APP_NAME.git -f HEAD:master

definitions:
  caches:
    buildfolder: dist
  services:
    postgres:
      image: postgres:11.5
      restart: always
      volumes:
        - ./docker/postgres-entrypoint-initdb.d:/docker-entrypoint-initdb.d
        - ./docker/wait-postgres.sh:/usr/bin/wait-postgres
      environment:
        POSTGRES_DB: 'pipelines'
        POSTGRES_USER: 'test_user'
        POSTGRES_PASSWORD: 'test_user_password'
    redis:
      image: redis
